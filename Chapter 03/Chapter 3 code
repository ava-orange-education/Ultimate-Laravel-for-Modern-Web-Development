use Illuminate\Support\Facades\Route;

Route::get('/welcome, function () {

    return 'Hello Reader';

});

#--------------------------------------------------------------------------------------------------------------------------------

use App\Http\Controllers\UserController;

Route::get('/ep1, [UserController::class, 'index']);

#--------------------------------------------------------------------------------------------------------------------------------
Route::redirect('/ep1', '/ep2');

#--------------------------------------------------------------------------------------------------------------------------------
Route::redirect('/ep1', '/ep2', 301);

#--------------------------------------------------------------------------------------------------------------------------------
Route::permanentRedirect('/ep1', '/ep2');

#--------------------------------------------------------------------------------------------------------------------------------
Route::view('/about', 'about');
#--------------------------------------------------------------------------------------------------------------------------------
Route::view('/about', 'about', ['state' => 'Reader']);

#--------------------------------------------------------------------------------------------------------------------------------
php artisan route:list -v

#--------------------------------------------------------------------------------------------------------------------------------
php artisan route:list --except-vendor

#--------------------------------------------------------------------------------------------------------------------------------
php artisan route:list --only-vendor

#--------------------------------------------------------------------------------------------------------------------------------
Route::fallback(function () {

    // Code Logic

});

#--------------------------------------------------------------------------------------------------------------------------------
use Illuminate\Http\Request;

Route::get('/user/{num}', function (Request $request, string $num) {

    return 'User '.$num;

});

#--------------------------------------------------------------------------------------------------------------------------------
Route::get('/user/{place?}', function (string $place = null) {

    return $place;

});

#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/user/{place?}', function (string $place = 'London') {

    return $place;

});

#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/user/{name}', function (string $name) {

    // Code Logic

})->where('name', '[A-Za-z]+');

#--------------------------------------------------------------------------------------------------------------------------------
Route::get('/user/{id}', function (string $id) {

    // Code Logic

})->where('id', '[0-9]+');

#--------------------------------------------------------------------------------------------------------------------------------
Route::get('/user/{id}/{name}', function (string $id, string $name) {

    // Code Logic

})->where(['id' => '[0-9]+', 'name' => '[a-z]+']);


#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/user/{id}/{name}', function (string $id, string $name) {

    // Code Logic

})->whereNumber('id')->whereAlpha('name');
#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/user/{name}', function (string $name) {

    // Code Logic

})->whereAlphaNumeric('name');

#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/user/{id}', function (string $id) {

    // Code Logic

})->whereUuid('id');

#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/user/{id}', function (string $id) {

    // Code Logic

})->whereUlid('id');

#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/category/{category}', function (string $category) {

    // Code Logic

})->whereIn('category', ['movie', 'song', 'painting']);

#--------------------------------------------------------------------------------------------------------------------------------
Route::middleware(['m1', 'm2'])->group(function () {
    Route::get('/', function () {

        // Uses m1 & m2 middleware

// Code Logic

    });
#--------------------------------------------------------------------------------------------------------------------------------
    Route::get('/city/pollution', function () {

        // Uses m1 & m2 middleware

        // Code Logic

    });
#--------------------------------------------------------------------------------------------------------------------------------
    Route::get('/city/waterSupply', function () {

        // Uses m1 & m2 middleware

		// Code Logic

    });
});
#--------------------------------------------------------------------------------------------------------------------------------

use App\Http\Controllers\CityController;

Route::controller(CityController::class)->group(function () {

    Route::get('/city/{id}', 'show');

    Route::post('/city', 'location');

});

#--------------------------------------------------------------------------------------------------------------------------------
Route::domain('{city}.example.com')->group(function () {

    Route::get('city/{id}', function (string $name, string $id) {

        // Code Logic

    });
});

#--------------------------------------------------------------------------------------------------------------------------------
Route::domain('{city}.example.com')->group(function () {

    Route::get('city/{id}', function (string $name, string $id) {

        // Code Logic

    });
});

#--------------------------------------------------------------------------------------------------------------------------------

Route::name('admin.')->group(function () {
    Route::get('/city', function () {

        // Route assigned name "admin.city"

    })->name('city');
});

#--------------------------------------------------------------------------------------------------------------------------------

<!-- View stored in resources/views/welcome.blade.php -->

<html>

    <body>

        <h2>Hello, {{ $name }}</h2>

    </body>

</html>

#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/', function () {

    return view('welcome', ['name' => 'ABC']);

});

#--------------------------------------------------------------------------------------------------------------------------------

Route::get('/', function () {

    return view('welcome', ['name' => 'ABC']);

});

#--------------------------------------------------------------------------------------------------------------------------------

use Illuminate\Support\Facades\View;

return View::make('welcome', ['name' => 'ABC']);

#--------------------------------------------------------------------------------------------------------------------------------

return view('admin.welcome', $data);

#--------------------------------------------------------------------------------------------------------------------------------
use Illuminate\Support\Facades\View;

return View::first(['custom.playground', 'playground'], $data);

#--------------------------------------------------------------------------------------------------------------------------------

use Illuminate\Support\Facades\View;

if (View::exists('emails.employee')) {

    // Code Logic

}

#--------------------------------------------------------------------------------------------------------------------------------

return view('welcome')

            ->with('name', 'ABC')

            ->with('organization', 'ORGNAME');

#--------------------------------------------------------------------------------------------------------------------------------
<?php

namespace App\Providers;

use Illuminate\Support\Facades\View;

class AppServiceProvider extends ServiceProvider
{

    /**
     * Register any application services.
     */

    public function register(): void
    {

        // Code Logic

    }

    /**
     * Bootstrap any application services.
     */

    public function boot(): void
    {

        View::share('key', 'value');

    }
}

#--------------------------------------------------------------------------------------------------------------------------------

<?php

namespace App\Providers;

use App\View\Composers\ProfileComposer;
use Illuminate\Support\Facades;
use Illuminate\Support\ServiceProvider;
use Illuminate\View\View;

class ViewServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */

    public function register(): void
    {

        // Code Logic

    }

    /**
     * Bootstrap any application services.
     */

    public function boot(): void
    {
        // Using class based composers

        Facades\View::composer('profile', ProfileComposer::class);

        // Using closure based composers

        Facades\View::composer('cityPollution', function (View $view) {

            // Code Logic

        });

        Facades\View::composer('introduction', function (View $view) {

            // Code Logic

        });
    }
}
#--------------------------------------------------------------------------------------------------------------------------------
<?php

namespace App\View\Composers;

use App\Repositories\UserRepository;
use Illuminate\View\View;

class ProfileComposer
{
    /**
     * Create a new profile composer.
     */

    public function __construct(

        protected CityRepository $city,

    ) {}

    /**
     * Bind data to the view.
     */

    public function compose(View $view): void
    {

        $view->with('count', $this->city->count());

    }
}

#--------------------------------------------------------------------------------------------------------------------------------
use App\Views\Composers\MultiComposer;
use Illuminate\Support\Facades\View;

View::composer(

    ['welcome', 'dashboard'],
    MultiComposer::class

);

#--------------------------------------------------------------------------------------------------------------------------------
use Illuminate\Support\Facades;
use Illuminate\View\View;

Facades\View::composer('*', function (View $view) {

    // Code Logic

});


#--------------------------------------------------------------------------------------------------------------------------------
use App\View\Creators\ProfileCreator;
use Illuminate\Support\Facades\View;

View::creator('profile', ProfileCreator::class);

#--------------------------------------------------------------------------------------------------------------------------------
php artisan view:cache

#--------------------------------------------------------------------------------------------------------------------------------

php artisan view:clear
